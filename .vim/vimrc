""" """ Vundle settings """ """

"""To install plugins from scratch on new machine after cloning my repo:
" From vim :     In normal mode, run :PluginInstall
" From shell :   vim +PluginInstall +qall
"""To update plugins:
" From vim :     :PluginUpdate
" From shell :   vim -c VundleUpdate -c quitall
" To update on shell quietly:
" $ vim -i NONE -c VundleUpdate -c quitall > /dev/null 2>&1

"""Required settings for Vundle
set nocompatible " Suck it, Vi!
filetype off

"""Set Vundle location and initialize it
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()
"alternatively, pass a path where Vundle should install plugins
"call vundle#begin('~/some/path/here')

"""Vundle must manage Vundle. Do not change!
Plugin 'VundleVim/Vundle.vim'

"""___ MY PLUGINS HERE ___"""

"Purdy colors
Plugin 'blockloop/vim-codeschool'
Plugin 'midnight.vim'
Plugin 'midnight2.vim'
Plugin 'chriskempson/tomorrow-theme', {'rtp': 'vim/'}
Plugin 'flazz/vim-colorschemes'
Plugin 'altercation/vim-colors-solarized'

"Syntax
Plugin 'fountain.vim'
Plugin 'shawncplus/phpcomplete.vim'
Plugin 'StanAngeloff/php.vim'

"Cool shit
Plugin 'scrooloose/nerdcommenter'
Plugin 'scrooloose/nerdtree'
Plugin 'RltvNmbr.vim'
Plugin 'ervandew/supertab'
Plugin 'ConradIrwin/vim-bracketed-paste'
Plugin 'romainl/vim-cool'
Plugin 'tpope/vim-fugitive'
Plugin 'matze/vim-move'
Plugin 'tpope/vim-surround'

""Currently not in use
"Plugin 'Yggdroot/indentLine'
"Plugin 'tpope/vim-sensible'

"""___ END MY PLUGINS ___"""

"""More info on Vundle Plugins:
" https://github.com/VundleVim/Vundle.vim/blob/v0.10.2/doc/vundle.txt#L72-L113

call vundle#end()
filetype plugin indent on
"filetype plugin on

""" """ End Vundle settings """ """


"""Holy shit this no last character thing is getting old fast
set virtualedit=onemore

"""Get cutting and pasting working,
vmap <C-c> "+y
nmap <C-v> "+pA
imap <C-v> <Esc>"+pA

"""utf-8 encoding is BEST ENCODING!!!
set encoding=utf-8

"""Turn on mouse, even though we shouldn't use it.
set mouse=a

"""Attempt to get indents correct
set autoindent
set complete-=i
set smarttab
let g:indentLine_enabled = 1

"""Tabs are motherfucking 4 spaces damnit!!!
set tabstop=4
set softtabstop=4
set expandtab
set shiftwidth=4
set nosmarttab

"""Show whitespace that shouldn't be there
set list listchars=tab:»·,trail:·,nbsp:·
set list lcs=tab:\|\-

"""Misc other vim-sensible things
if v:version > 703 || v:version == 703 && has("patch541")
    set formatoptions+=j " Delete comment character when joining commented lines
endif
if has('path_extra')
    setglobal tags-=./tags tags-=./tags; tags^=./tags;
endif
if &shell =~# 'fish$' && (v:version < 704 || v:version == 704 && !has('patch276'))
    set shell=/bin/bash
endif
if !empty(&viminfo)
    set viminfo^=!
endif
set sessionoptions-=options
" Allow color schemes to do bright colors without forcing bold.
if &t_Co == 8 && $TERM !~# '^linux\|^Eterm'
  set t_Co=16
endif
" Load matchit.vim, but only if the user hasn't installed a newer version.
if !exists('g:loaded_matchit') && findfile('plugin/matchit.vim', &rtp) ==# ''
  runtime! macros/matchit.vim
endif

"""Show line numbers, both absolute and relative
set relativenumber
"call RltvNmbr#RltvNmbrCtrl(1)
"""Plugin takes up way too much processing power, so just using built-in
set number

"""Now make insert mode show absolute numbering only
autocmd InsertEnter * set relativenumber!
autocmd InsertLeave * set relativenumber

"""Caps lock mapped to Esc while in Vim
"autocmd VimEnter * silent !xmodmap -e 'clear Lock' -e 'keycode 0x42 = Escape'
"autocmd VimLeave * silent !xmodmap -e 'clear Lock' -e 'keycode 0x42 = Caps_Lock'
"""Nevermind, I just set that globally on my system all the time.

"""Nevermind, that 0.5 second pause every time I run it is going to be annoying,
"""so just map Esc to qq. After all, how often do you type qq?
"imap qq <Esc>
"map qq <Esc>
"""Turns out, never! This qq command is actually working out brillitantly!
"""Actually, with caps lock set, this isn't really necessary.

"""While we're at it, force ourselves to practice proper vim movement
map <up> <nop>
map <down> <nop>
map <left> <nop>
map <right> <nop>
"""Practice, practice, practice!!!
imap <up> <nop>
imap <down> <nop>
imap <left> <nop>
imap <right> <nop>

"""While we're at it, let's force ourselves to keep other good habits
autocmd InsertEnter * let updaterestore=&updatetime | set updatetime=5000
autocmd InsertLeave * let &updatetime=updaterestore
autocmd CursorHoldI * silent! stopinsert

"""And while we're forcing ourselves to develop good habits, we
"""might as well torture ourselves.
"noremap h <NOP>
"noremap j <NOP>
"noremap k <NOP>
"noremap l <NOP>
"""Nevermind that's too hard, I can't fucking move. Commenting those out
"""took like eight minutes. Disabling the arrow keys is plenty for now.

"""{{{Fold}}}
set foldlevelstart=99
set foldmethod=indent
nmap <space> za

"""Don't create wierd new backup files I never asked for
set nobackup

"""Write backup is cool
set writebackup

"""And for the love of God please do keep a swap file in case of a crash
set swapfile

"""Show bottom info bar
set ruler

"""Remember damn near everything
set history=999
set tabpagemax=50

"""Keep me front and center
set scrolloff=999

"""Finish my sentences for me
set showcmd
set wildmode=longest,list,full
set wildmenu

"""Scroll correctly
if !&scrolloff
  set scrolloff=1
endif
if !&sidescrolloff
  set sidescrolloff=5
endif
set display+=lastline

"""Show status
set laststatus=2

"""Remap vim-move movements to ctrl because terminal app captures alt key
let g:move_key_modifier = 'C'
"Ctrl+j and Ctrl+k move lines/selections up/down
"And {num}ctrl+j/k moves them up/down that number of lines

"""Always refresh
set autowrite
set autoread
autocmd FocusGained,BufEnter * :silent! !

"""If not in terminal, use good font
if has('gui_running')
    if has('gui_win32')
        set guifont=DejaVu_Sans_Mono:h10:cANSI
    else
        set guifont=DejaVu\ Sans\ Mono\ 10
    endif
endif

"""Find my homie
set showmatch

"""Don't use unnecessary resources
set lazyredraw

"""Improve searching
set gdefault
set ignorecase
"set smartcase
set hlsearch
nmap <silent> ,/ :noh<cr>
set incsearch
set showmatch
" Use <C-L> to clear the highlighting of :set hlsearch.
if maparg('<C-L>', 'n') ==# ''
    nnoremap <silent> <C-L> :nohlsearch<C-R>=has('diff')?'<Bar>diffupdate':''<CR><CR><C-L>
endif
"Should also be mapped to <leader>/ which is currently ,/

"""Some basic HTML fixes
set matchpairs+=<:>
let g:html_indent_tags = 'li\|p'

"""Some easy standard keys I want to use
set backspace=indent,eol,start
nmap <CR> $a<CR><Esc>
nmap <Del> i<Del>
nmap <BS> i<BS>
"nmap <C-BS> dbi<Del><Esc>
"imap <C-BS> <Esc>edbi<Del>

"""Just making sure enter key map above doesn't fuck up things
autocmd CmdwinEnter * nmap <CR> <CR>
autocmd BufReadPost quickfix nmap <CR> <CR>

"""Nerd Tree
autocmd StdinReadPre * let s:std_in=1
autocmd VimEnter * if argc() == 0 && !exists("s:std_in") | NERDTree | endif
autocmd VimEnter * if argc() == 1 && isdirectory(argv()[0]) && !exists("s:std_in") | exe 'NERDTree' argv()[0] | wincmd p | ene | endif
autocmd bufenter * if (winnr("$") == 1 && exists("b:NERDTree") && b:NERDTree.isTabTree()) | q | endif
map <C-n> :NERDTreeToggle<CR>

"""Bitch you'll wrap when I fucking tell you to wrap
set linebreak
set textwidth=0
set wrapmargin=0
set formatoptions-=t

"""Like here, yes wrap here.
set wrap

"""Sssssave and QQQQQQuit 
nmap sss :w<CR>
nmap qqq :wq<CR>
imap sss <Esc>:w<CR>i
imap qqq <Esc>:wq<CR>

"""Ctrl save and ctrl quit
nmap <C-s> :w<CR>
nmap <C-q> :w<CR>
imap <C-s> <Esc>:w<CR>i
imap <C-q> <Esc>:wq<CR>

"""Turn on dem pretty colors
set background=dark
highlight clear
if exists("syntax_on")
    syntax reset
endif
syntax enable
highlight    Normal       ctermfg=White       ctermbg=235
highlight    NonText      ctermfg=DarkGrey    ctermbg=235
highlight    Statement    ctermfg=LightGreen  ctermbg=235
highlight    Comment      ctermfg=228         ctermbg=235          cterm=italic
highlight    Constant     ctermfg=39          ctermbg=235
highlight    Identifier   ctermfg=147         ctermbg=235
highlight    Type         ctermfg=Green       ctermbg=235
highlight    Folded       ctermfg=White       ctermbg=Blue
highlight    Special      ctermfg=White       ctermbg=235
highlight    PreProc      ctermfg=111         ctermbg=235
highlight    Scrollbar    ctermfg=Blue        ctermbg=235
highlight    Cursor       ctermfg=white       ctermbg=235
highlight    ErrorMsg     ctermfg=white       ctermbg=124
highlight    WarningMsg   ctermfg=Black       ctermbg=Yellow
highlight    VertSplit    ctermfg=White       ctermbg=Blue
highlight    Directory    ctermfg=Cyan        ctermbg=DarkBlue
highlight    Visual       ctermfg=Black       ctermbg=Cyan
highlight    Title        ctermfg=White       ctermbg=Blue
highlight    StatusLine   ctermfg=White       ctermbg=235          cterm=none
highlight    StatusLineNC ctermfg=White       ctermbg=235          cterm=none
highlight    LineNr       ctermfg=White       ctermbg=DarkBlue     cterm=bold
highlight    CursorLineNr ctermfg=Yellow      ctermbg=Blue         cterm=bold
highlight    MatchParen   ctermfg=White       ctermbg=Black        cterm=bold

"""Clean code should rarely exceed 80 chars per line
"""But don't wrap for me, just alert me to where it is
"let &colorcolumn=join(range(80,2000),",")
let &colorcolumn=80
highlight ColorColumn ctermbg=237
"highlight OverLength ctermfg=red
"match OverLength /\%>79v.\+/

"""Highlight current line
set cursorline
highlight CursorLine cterm=none ctermbg=237

"""Use highlight to tell me when I'm in insert mode
autocmd InsertEnter * highlight CursorLine cterm=none ctermbg=59
autocmd InsertLeave * highlight CursorLine cterm=none ctermbg=237

